

 module.exports = function(RED) {
    "use strict";

    function OutcomeNode(n) {
        RED.nodes.createNode(this,n);

        this.subject = n.name

        this.on("input", function(msg, send, done) {
            this.parents = msg.parents || {};
            this.parent = msg.subject || "";
            let name = this.name;

            let input = msg.probs || "";
            this.probs = n.probs || "";
            if (this.parent != "") {
                this.parents={[this.parent]: input } 
                input = msg.probs[name] 
            }

            msg ={
                subject: this.name,
                parents: this.parents,
                prob: input,
            }
            send(msg);
            done();
        });
    }

    RED.nodes.registerType("outcome", OutcomeNode)

    RED.httpAdmin.post("/outcome/:id", RED.auth.needsPermission("outcome.write"), function(req,res) {
        var node = RED.nodes.getNode(req.params.id);
        if (node != null) {
            try {
                node.receive();
                res.sendStatus(200);
            } catch(err) {
                res.sendStatus(500);
                node.error(RED._("outcome.failed",{error:err.toString()}));
            }
        } else {
            res.sendStatus(404);
        }
    });
}
